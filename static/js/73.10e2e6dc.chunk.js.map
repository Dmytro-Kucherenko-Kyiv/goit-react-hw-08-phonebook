{"version":3,"file":"static/js/73.10e2e6dc.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.jsx"],"sourcesContent":["export const getIsLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 3px solid ${p => p.theme.colors.text};\n  border-radius: 30px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  max-width: 500px;\n  margin: 0 auto;\n`\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weigth: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: ${p => p.theme.colors.text};\n`\nexport const Input = styled.input`\n  cursor: pointer;\n  font-size: 25px;\n  text-align: center;\n  color: ${p => p.theme.colors.text};\n  border: 1mm solid ${p => p.theme.colors.text};\n  border-radius: 20px;\n  background-color: ${p => p.theme.colors.buttonColor};\n\n  &:hover, &:focus{\n    border-color: ${p => p.theme.colors.textAccent};\n  }\n`\nexport const SubmitButton = styled.button`\n  font-size: 20px;\n  padding: 5px;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.buttonColor};\n  border: 1mm solid ${p => p.theme.colors.text};\n  border-radius: 20px;\n  cursor:pointer;\n\n  &:hover {\n    color:  ${p => p.theme.colors.textAccent};\n    background-color: ${p => p.theme.colors.text};\n    border-color: ${p => p.theme.colors.textAccent};\n  }\n`","import { useState } from \"react\";\nimport { Form, Input, Label, SubmitButton } from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"Redux/contacts/selectors\";\n// import { nanoid } from \"@reduxjs/toolkit\";\nimport { addContact } from \"Redux/contacts/operations\";\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\nconst handleSubmit = e => {\n  e.preventDefault();\n\n  const result = contacts.find(({ name }) =>\n    name.toLocaleLowerCase() === e.target.name.value.toLocaleLowerCase());\n  \n  if (result) {\n/*     const message = `${e.target.name.value} is already in contact`;\n    alert(message); */\n    toast.warn(\n        `${e.target.name.value} is already in contact`,\n        {\n          position: 'top-right',\n          autoClose: 2000,\n        }\n      );\n  }\n  else {\n    dispatch(addContact({ name, number })).then(result => {\n      if (result.meta.requestStatus === 'fulfilled') {\n        setName('');\n        setNumber('');\n        return;\n      }\n      toast.error(`Something went wrong. Сontact ${e.target.name.value} was not added`);\n    });;\n\n      setName('');\n      setNumber('');\n  }\n}\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n    return (\n      <Form onSubmit={(e) => { handleSubmit(e) }}>\n\n      <Label htmlFor=\"name\"> Name\n\n        <Input\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n      </Label>\n\n      <Label htmlFor=\"number\"> Number\n\n        <Input\n          value={number}\n          onChange={e => setNumber(e.currentTarget.value)}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n      </Label>\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n\n    </Form>\n  )\n  }","import styled from \"styled-components\";\n\nexport const LabelWrap = styled.div`\n  margin: 20px auto;\n`\n\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weigth: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: ${p => p.theme.colors.text};\n  text-align: center;\n`\n\nexport const Input = styled.input`\n  cursor: pointer;\n  margin: 0 auto;\n  font-size: 20px;\n  max-width: 500px;\n  text-align: center;\n  color: ${p => p.theme.colors.text};\n  border: 1mm solid ${p => p.theme.colors.text};\n  border-radius: 20px;\n  background-color: ${p => p.theme.colors.buttonColor};\n\n  &:hover, &:focus{\n    border-color: ${p => p.theme.colors.textAccent};\n  }\n`","import { Input, Label, LabelWrap } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from \"Redux/contacts/contactsSlice\";\nimport { getFilter } from \"Redux/contacts/selectors\";\n\nexport const Filter = () => {\n  \n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  \n  return (\n\n    <LabelWrap>\n      <Label htmlFor='filter'> Find contacts by name\n        <Input\n          type='text'\n          name='filter'\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n        />\n      </Label>\n    </LabelWrap>\n  )\n}","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  color: ${p => p.theme.colors.text};\n  text-align: center;\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  font-size: 30px;\n`\nexport const ItemStyle = styled.span`\n  display: list-item;\n  list-style-type: '👉';\n  padding-inline-start: 1ch;\n`\n\nexport const DeleteButton = styled.button`\n  font-size: 15px;\n  padding: 5px;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.buttonColor};\n  border: 1mm solid ${p => p.theme.colors.text};\n  border-radius: 20px;\n  cursor:pointer;\n\n  &:hover {\n    color:  ${p => p.theme.colors.textAccent};\n    background-color: ${p => p.theme.colors.text};\n    border-color: ${p => p.theme.colors.textAccent};\n  }\n`\n\nexport const Text = styled.div`\n  color: ${p => p.theme.colors.text};\n  font-size: 25px;\n  font-weigth: 600px;\n`","import { DeleteButton, Item, ItemStyle, List, Title, Text } from \"./ContactList.styled\";\nimport { getContacts, getFilter } from 'Redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = filter === '' ? contacts: contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n  <>\n    <Title>Contacts</Title>\n      {contacts.length === 0 && (\n        <p>You don't have any contacts. Please add some ...</p>\n      )}\n    <List>\n      {filteredContacts.map((contact) => \n        <Item key={contact.id}>\n          <ItemStyle />\n\n        <Text>{contact.name} : {contact.number}</Text>\n\n          <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>Delete</DeleteButton>\n        </Item>)}\n    </List>\n  </>\n)\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../Redux/contacts/operations';\nimport { getIsLoading } from '../Redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 style={{ fontSize: '40px', color: '#041934', textAlign: 'center' }}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <div style={{ fontSize: '20px', color: '#f0595b', textAlign: 'center' }}>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n      <ToastContainer position=\"top-left\" autoClose={2000} />\n    </>\n  );\n}\n"],"names":["getIsLoading","state","contacts","isLoading","getContacts","items","getFilter","filter","Form","styled","p","theme","colors","text","Label","Input","buttonColor","textAccent","SubmitButton","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","find","toLocaleLowerCase","target","value","toast","position","autoClose","addContact","then","result","meta","requestStatus","handleSubmit","htmlFor","onChange","currentTarget","type","pattern","title","required","LabelWrap","Filter","filterContact","Title","List","Item","ItemStyle","DeleteButton","Text","ContactList","filteredContacts","contact","toLowerCase","includes","length","map","onClick","deleteContact","id","Contacts","useEffect","fetchContacts","style","fontSize","color","textAlign"],"sourceRoot":""}